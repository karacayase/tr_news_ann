# main.py
from tensorflow.keras.models import load_model
import joblib
import pickle
import numpy as np
from text_cleaner import clean_text  # dÄ±ÅŸ dosyadan fonksiyon iÃ§e aktarÄ±lÄ±r

# ğŸ“Œ 1. Girdi verisi (tahmin edilecek haber baÅŸlÄ±klarÄ±)
new_data = [
    "CumhurbaÅŸkanÄ± yeni kabineyi aÃ§Ä±kladÄ±",
    "Dolar kuru rekor tazeledi",
    "5G altyapÄ±sÄ± iÃ§in Ã§alÄ±ÅŸmalar baÅŸladÄ±",
    "UluslararasÄ± film festivali Ä°stanbulâ€™da baÅŸladÄ±",
    "Polis uyuÅŸturucu operasyonunda 12 kiÅŸiyi gÃ¶zaltÄ±na aldÄ±"
]

# ğŸ“Œ 2. Temizle
new_data_cleaned = [clean_text(text) for text in new_data]

# ğŸ“Œ 3. Model, TF-IDF ve LabelEncoder yÃ¼kle
model = load_model("tr_news_ann_model.keras")
tfidf = joblib.load("tfidf_vectorizer.pkl")

with open("label_encoder.pkl", "rb") as f:
    label_encoder = pickle.load(f)

# ğŸ“Œ 4. VektÃ¶rleÅŸtir
X_input = tfidf.transform(new_data_cleaned)

# ğŸ“Œ 5. Tahmin et
predictions = model.predict(X_input)
predicted_indices = np.argmax(predictions, axis=1)

# ğŸ“Œ 6. Etiketlere Ã§evir
# EÄŸer label_encoder bir np.array gibi gÃ¶rÃ¼nÃ¼yorsa:
if isinstance(label_encoder, np.ndarray):
    predicted_labels = label_encoder[predicted_indices]
else:
    predicted_labels = label_encoder.inverse_transform(predicted_indices)

# ğŸ“Œ 7. YazdÄ±r
for original, label in zip(new_data, predicted_labels):
    print(f"{original} --> Tahmin: {label}")
